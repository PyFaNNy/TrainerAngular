version: '3.4'
name: trainer
services:
  frontend:
    image: trainer-frontend
    container_name: frontend
    build:
      context: ./Trainer.Frontend/Trainer/
      dockerfile: Dockerfile
    volumes:
      - '.:/app'
      - '/app/node_modules'
    ports: 
     - 4200:80
    environment: 
      - IDENTITY_URL=http://localhost:5000
      - BACKEND_URL=http://localhost:7000
    networks:
      - trainer
  backend:
    image: trainer-backend
    container_name: backend
    build:
      context: ./Trainer.Backend/Trainer/
      dockerfile: ./Trainer/Dockerfile
    ports:
    - 7001:443
    - 7000:80
    environment: 
      - IDENTITY_URL=http://localhost:5000
      - MSSQL_URL=database
    networks:
      - trainer
    depends_on:
      - database
  identityServer:
    image: trainer-identity-server
    container_name: identityserver
    build:
      context: ./Trainer.Backend/Trainer/
      dockerfile: ./Trainer.IdentityServer/Dockerfile
    ports:
    - 5001:443
    - 5000:80
    environment: 
      - FRONTEND_URL=http://localhost:4200
      - BACKEND_URL=http://localhost:7000
      - MSSQL_URL=database
    networks:
      - trainer
    depends_on:
      - database
      - backend
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: database
    ports: 
     - 1434:1433
    environment:
      ACCEPT_EULA: "sa"
      SA_PASSWORD: "Like1_Like2"
    networks:
      - trainer
  prometheus:
    image: quay.io/prometheus/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - trainer
  grafana:
    container_name: grafana
    image : grafana/grafana
    depends_on: 
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - trainer
networks:
  trainer:
    driver: bridge